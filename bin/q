#!/usr/bin/env ruby

require 'net/http'
require 'json'
require 'uri'

API_KEY = ENV['ANTHROPIC_API_KEY']
API_URL = 'https://api.anthropic.com/v1/messages'


def generate_command(prompt)
  shell = `basename $SHELL`.strip
  uname = `uname`.strip

  prompt = <<~EOS
  Return cli command(s) suitable for copy/pasting into '#{shell}' on '#{uname}'.

  Do NOT include commentary NOR Markdown triple-backtick code blocks.
  Your entire response will be copied into terminal automatically and should be executable as is.

  The command should do this: #{prompt}
  EOS

  response = llm(prompt)
end

def llm(prompt)
  uri = URI.parse(API_URL)
  http = Net::HTTP.new(uri.host, uri.port)
  http.use_ssl = true

  request = Net::HTTP::Post.new(uri.request_uri)
  request['Content-Type'] = 'application/json'
  request['X-API-Key'] = API_KEY
  request['anthropic-version'] = '2023-06-01'

  request.body = {
    model: 'claude-3-sonnet-20240229',
    max_tokens: 1024,
    messages: [
      { role: 'user', content: prompt }
    ]
  }.to_json

  response = http.request(request)
  if response.code == '200'
    result = JSON.parse(response.body)
    result['content'][0]['text']
  else
    STDERR.puts "Error: #{response.code} - #{response.message}"
    STDERR.puts
    STDERR.puts response.body
    nil
  end
end

def copy_to_clipboard(text)
  # only works on osx
  IO.popen('pbcopy', 'w') { |f| f << text }
rescue => e
  false
end

if ARGV.empty?
  puts "Usage: q <prompt>"
  exit 1
end

prompt = ARGV.join(' ')
command = generate_command(prompt)

if command
  puts command
  puts "\n(copied to clipboard)" if copy_to_clipboard(command)
else
  STDERR.puts "Failed to generate command."
  exit 1
end
